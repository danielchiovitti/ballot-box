// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ballot_box

import (
	"github.com/danielchiovitti/ballot-box/pkg/database/provider"
	"github.com/danielchiovitti/ballot-box/pkg/presentation"
	"github.com/danielchiovitti/ballot-box/pkg/presentation/factory/usecase/redis"
	"github.com/danielchiovitti/ballot-box/pkg/presentation/factory/usecase/redisbloom"
	"github.com/danielchiovitti/ballot-box/pkg/presentation/route"
	"github.com/google/wire"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

func InitializeHandler() *presentation.Handler {
	healthRoute := route.NewHealthRoute()
	votingRoute := route.NewVotingRoute()
	viper := LoadEnvConfig()
	handler := presentation.NewHandler(healthRoute, votingRoute, viper)
	return handler
}

// wire.go:

func LoadEnvConfig() *viper.Viper {
	v := viper.New()
	v.SetEnvPrefix("bb")
	v.AutomaticEnv()
	return v
}

var superSet = wire.NewSet(
	LoadEnvConfig, provider.NewRedisProvider, presentation.NewHandler, route.NewHealthRoute, route.NewVotingRoute, provider.NewMongoDbProvider, redis.NewSetUseCaseFactory, redis.NewIncrUseCaseFactory, redis.NewExpireUseCaseFactory, redisbloom.NewReserveUseCaseFactory, redisbloom.NewAddUseCaseFactory, redisbloom.NewExistsUseCaseFactory, redis.NewGetUseCaseFactory,
)
